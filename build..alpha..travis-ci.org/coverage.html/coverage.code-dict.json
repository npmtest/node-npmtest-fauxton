{"/home/travis/build/npmtest/node-npmtest-fauxton/test.js":"/* istanbul instrument in package npmtest_fauxton */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-fauxton/lib.npmtest_fauxton.js":"/* istanbul instrument in package npmtest_fauxton */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_fauxton = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_fauxton = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-fauxton/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-fauxton && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_fauxton */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_fauxton\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_fauxton.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_fauxton.rollup.js'] =\n            local.assetsDict['/assets.npmtest_fauxton.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_fauxton.__dirname + '/lib.npmtest_fauxton.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/index.js":"var path = require(\"path\");\nvar http = require(\"http\");\nvar httpProxy = require('http-proxy');\nvar send = require('send');\nvar urlLib = require('url');\nvar _ = require('lodash');\nvar dist_dir = process.env.DIST || __dirname + '/dist/release/';\n\nmodule.exports = function (options) {\n  // Options\n  var setContentSecurityPolicy = options.contentSecurityPolicy;\n  var port = options.port;\n  var proxyUrl = options.couchdb;\n\n  function sendFile (req, res, filePath) {\n    return send(req, filePath)\n    .on('error', function (err) {\n      if (err.status === 404) {\n        console.log('Could not locate', filePath);\n      } else {\n        console.log('ERROR', filePath, err);\n      }\n\n      res.setHeader(\"Content-Type\", \"text/javascript\");\n      res.statusCode = 404;\n      res.end(JSON.stringify({error: err.message}));\n    })\n    .pipe(res);\n  }\n\n  var fileTypes = ['.js', '.css', '.png', '.swf', '.eot', '.woff', '.svg', '.ttf', '.swf'];\n\n  function isFile (url) {\n    return _.includes(fileTypes, path.extname(url));\n  }\n\n  // create proxy to couch for all couch requests\n  var proxy = httpProxy.createServer({\n    secure: false,\n    changeOrigin: true,\n    target: proxyUrl\n  });\n\n  http.createServer(function (req, res) {\n    var isDocLink = /_utils\\/docs/.test(req.url);\n    var url = req.url.split(/\\?v=|\\?noCache/)[0].replace('_utils', '');\n    var accept = [];\n    if (req.headers.accept) {\n      var accept = req.headers.accept.split(',');\n    }\n    if (setContentSecurityPolicy) {\n      var headerValue = \"default-src 'self'; child-src 'self' data: blob:; img-src 'self' data:; font-src 'self'; \" +\n                        \"script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline';\";\n      res.setHeader('Content-Security-Policy', headerValue);\n    }\n\n    if (url === '/' && accept[0] !== 'application/json') {\n      // serve main index file from here\n      return sendFile(req, res, path.join(dist_dir, 'index.html'));\n    } else if (isFile(url) && !isDocLink) {\n      return sendFile(req, res, path.join(dist_dir, url));\n    }\n\n    // This sets the Host header in the proxy so that one can use external\n    // CouchDB instances and not have the Host set to 'localhost'\n    var urlObj = urlLib.parse(req.url);\n    req.headers.host = urlObj.host;\n\n    proxy.web(req, res);\n  }).listen(port, '0.0.0.0');\n\n  proxy.on('error', () => {\n    // don't explode on cancelled requests\n  });\n\n  //Remove Secure on the cookie if the proxy is communicating to a CouchDB instance\n  // via https.\n  proxy.on('proxyRes', function (proxyRes) {\n    if (proxyRes.headers['set-cookie']) {\n      proxyRes.headers['set-cookie'][0] = proxyRes.headers[\"set-cookie\"][0].replace('Secure', '');\n    }\n  });\n\n  var logo = [\n    [\"\"],\n    [\" ______                        _                   \"],\n    [\"|  ____|                      | |                  \"],\n    [\"| |__    __ _   _   _  __  __ | |_    ___    _ __  \"],\n    [\"|  __|  / _` | | | | | \\\\ \\\\/ / | __|  / _ \\\\  | '_ \\\\ \"],\n    [\"| |    | (_| | | |_| |  >  <  | |_  | (_) | | | | |\"],\n    [\"|_|     \\\\__,_|  \\\\__,_| /_/\\\\_\\\\  \\\\__|  \\\\___/  |_| |_|\"],\n    [\"\"]\n  ];\n\n  _.each(logo, function (line) {\n    console.log(line.toString());\n  });\n\n  console.log('Listening on ' + port);\n};\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/couchapp.js":"// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\nvar couchapp = require('couchapp'),\n    path = require('path'),\n    ddoc;\n\nddoc = {\n  _id: '_design/fauxton',\n  rewrites: [\n    { \"from\": \"_db\",     \"to\"  : \"../..\" },\n    { \"from\": \"_db/*\",   \"to\"  : \"../../*\" },\n    { \"from\": \"_ddoc\",   \"to\"  : \"\" },\n    { \"from\": \"_ddoc/*\", \"to\"  : \"*\"},\n    {from: '/', to: 'index.html'},\n    {from: '/*', to: '*'}\n  ],\n  views: {},\n  shows: {},\n  lists: {},\n  validate_doc_update: function () {\n    /*if (newDoc._deleted === true && userCtx.roles.indexOf('_admin') === -1) {\n      throw \"Only admin can delete documents on this database.\";\n    }*/\n  }\n};\n\n\ncouchapp.loadAttachments(ddoc, path.join(__dirname, 'dist', 'release'));\nmodule.exports = ddoc;\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/devserver.js":"const spawn = require('child_process').spawn;\nconst fs = require(\"fs\");\nconst webpack = require('webpack');\nconst WebpackDev = require('webpack-dev-server');\nconst config = require('./webpack.config.dev.js');\nconst httpProxy = require('http-proxy');\nconst path = require('path');\n\n\nconst loadSettings = function () {\n  let fileName = './settings.json.default.json';\n  if (fs.existsSync('./settings.json')) {\n    fileName = './settings.json';\n  }\n\n  return require(fileName).couchserver || {\n    port: process.env.FAUXTON_PORT || 8000,\n    contentSecurityPolicy: true,\n    proxy: {\n      target: process.env.COUCH_HOST || 'http://127.0.0.1:5984',\n      changeOrigin: false\n    }\n  };\n};\n\nconst settings = loadSettings();\n\nconst devSetup = function (cb) {\n  console.log('setup dev environment');\n  let cmd = 'devSetupWithClean';\n  if (settings.noClean) {\n    cmd = 'devSetup';\n  }\n\n  const grunt = spawn('grunt', [cmd]);\n\n  grunt.stdout.on('data', (data) => {\n    console.log(data.toString());\n  });\n\n  grunt.stderr.on('error', (data) => {\n    console.log('Setup error:', data.toString());\n  });\n\n  grunt.on('close', (code) => {\n    console.log('dev setup finished with code', code);\n    if (code === 0) {\n      cb();\n    }\n  });\n};\n\nconst defaultHeaderValue = \"default-src 'self'; child-src 'self' blob:; img-src 'self' data:; font-src 'self'; \" +\n                  \"script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline';\";\nfunction getCspHeaders () {\n  if (!settings.contentSecurityPolicy) {\n    return;\n  }\n\n  const cspHeader = settings.contentSecurityPolicyHeader || defaultHeaderValue;\n\n  return {\n    'Content-Security-Policy': cspHeader\n  };\n};\n\nconst runWebpackServer = function () {\n  const proxy = httpProxy.createServer({\n    secure: false,\n    changeOrigin: true,\n    target: settings.proxy.target\n  });\n\n  proxy.on('proxyRes', function (proxyRes) {\n    if (proxyRes.headers['set-cookie']) {\n      proxyRes.headers['set-cookie'][0] = proxyRes.headers[\"set-cookie\"][0].replace('Secure', '');\n    }\n  });\n\n  proxy.on('error', function () {\n    // don't explode on cancelled requests\n  });\n\n  const options = {\n    contentBase: path.join(__dirname, '/dist/debug/'),\n    host: 'localhost',\n    port: process.env.FAUXTON_PORT || 8000,\n    overlay: true,\n    hot: false,\n    historyApiFallback: false,\n    stats: {\n      colors: true,\n    },\n    headers: getCspHeaders(),\n    setup: (app) => {\n      app.all('*', (req, res, next) => {\n        const accept = req.headers.accept ? req.headers.accept.split(',') : '';\n\n        if (/application\\/json/.test(accept[0])) {\n          proxy.web(req, res);\n          return;\n        }\n\n        next();\n      });\n    }\n  };\n\n  const compiler = webpack(config);\n  const server = new WebpackDev(compiler, options);\n\n  server.listen(options.port, '0.0.0.0', function (err) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    console.log('listening on', options.host, options.port);\n    console.log('Starting first compile. This will take about 10 seconds...');\n  });\n};\n\n\ndevSetup(runWebpackServer);\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/webpack.config.dev.js":"// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst path = require('path');\nconst settings = require('./tasks/helper')\n                    .init()\n                    .readSettingsFile()\n                    .template\n                    .development;\n\nmodule.exports = {\n  entry: {\n    bundle: './app/main.js' //Our starting point for our development.\n  },\n\n  output: {\n    path: path.join(__dirname, '/dist/debug/'),\n    filename: 'dashboard.assets/js/[name].js'\n  },\n\n  plugins: [\n    new webpack.optimize.LimitChunkCountPlugin({maxChunks: 1}),\n    new HtmlWebpackPlugin(Object.assign({\n      template: settings.src,\n      title: 'Project Fauxton',\n      filename: 'index.html',\n      generationLabel: 'Fauxton Dev',\n      generationDate: new Date().toISOString()\n    }, settings.variables)),\n  ],\n  module: {\n    rules: [\n    {\n      test: /\\.jsx?$/,\n      enforce: \"pre\",\n      use: ['eslint-loader'],\n      exclude: /node_modules/\n    },\n    {\n      test: /\\.jsx?$/,\n      exclude: /node_modules/,\n      use: 'babel-loader'\n    },\n    {\n     test: require.resolve('jquery'),\n      use: [{\n          loader: 'expose-loader',\n          options: 'jQuery'\n      },\n      {\n          loader: 'expose-loader',\n          options: '$'\n      }]\n     },\n     {\n      test: require.resolve(\"backbone\"),\n      use: [{\n          loader: 'expose-loader',\n          options: 'Backbone'\n      }]\n    },\n    {\n      test: /\\.less$/,\n      use: [\n        \"style-loader\",\n        \"css-loader\",\n        \"less-loader\"\n      ]\n    },\n    {\n      test: /\\.css$/,\n      use: [\n        \"style-loader\",\n        \"css-loader\"\n      ]\n    },\n    {\n      test: /\\.woff(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n      loader: 'url-loader?limit=10000&mimetype=application/font-woff&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    {\n      test: /\\.woff2(\\?\\S*)?$/,   loader: 'url-loader?limit=10000&mimetype=application/font-woff2&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    {\n      test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'url-loader?limit=10000&mimetype=application/font-tff&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    { test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/fonts/[name].[ext]' },\n    { test: /\\.png(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/img/[name].[ext]' },\n    { test: /\\.gif(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/img/[name].[ext]' },\n    { test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'url-loader?limit=10000&mimetype=image/svg+xml&name=dashboard.assets/img/[name].[ext]' }\n  ]\n  },\n  resolve: {\n    extensions: ['*', '.js', '.jsx'], //We can use .js and React's .jsx files using Babel\n    alias: {\n      \"bootstrap\": \"../assets/js/libs/bootstrap\",\n      \"underscore\": \"lodash\",\n    }\n  },\n  devtool: 'source-map'\n};\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/Gruntfile.js":"// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\n\n// This is the main application configuration file.  It is a Grunt\n// configuration file, which you can learn more about here:\n// https://github.com/cowboy/grunt/blob/master/docs/configuring.md\n\n/*jslint node: true */\n\"use strict\";\n\nmodule.exports = function (grunt) {\n  var helper = require('./tasks/helper.js'),\n      initHelper = helper.init(grunt),\n      _ = grunt.util._;\n\n  var couch_config = function () {\n    var default_couch_config = {\n      fauxton: {\n        db: helper.couch + 'fauxton',\n        app: './couchapp.js',\n        options: {\n          okay_if_missing: true\n        }\n      }\n    };\n\n    var settings_couch_config = initHelper.readSettingsFile().couch_config;\n    return settings_couch_config || default_couch_config;\n  }();\n\n  var cleanableAddons =  function () {\n    var theListToClean = [];\n    initHelper.processAddons(function (addon) {\n      // Only clean addons that are included from a local dir\n      if (addon.path) {\n        theListToClean.push(\"app/addons/\" + addon.name);\n      }\n    });\n\n    return theListToClean;\n  }();\n\n  var cleanable = function () {\n    // Whitelist files and directories to be cleaned\n    // You'll always want to clean these two directories\n    // Now find the external addons you have and add them for cleaning up\n    return _.union([\"dist/\", \"app/load_addons.js\"], cleanableAddons);\n  }();\n\n  var templateSettings = (function getTemplateSettings () {\n    var settings = initHelper.readSettingsFile();\n\n    var i18n = JSON.stringify(initHelper.readI18nFile(), null, ' ');\n\n    Object.keys(settings.template).forEach(function (key) {\n      settings.template[key].variables.generationDate = new Date().toISOString();\n      if (!settings.template[key].variables.generationLabel) {\n        settings.template[key].variables.generationLabel = 'Generated: ';\n      }\n      settings.template[key].app.i18n = i18n;\n    });\n\n    return settings.template;\n  })();\n\n  var config = {\n\n    // The clean task ensures all files are removed from the dist/ directory so\n    // that no files linger from previous builds.\n    clean: {\n      options: {\n        'force': true\n      },\n      release:  cleanable\n    },\n\n    template: templateSettings,\n\n    // Copy build artifacts and library code into the distribution\n    // see - http://gruntjs.com/configuring-tasks#building-the-files-object-dynamically\n    copy: {\n      couchdb: {\n        files: [\n          // this gets built in the template task\n          {src: \"dist/release/index.html\", dest: \"../../share/www/index.html\"},\n          {src: [\"**\"], dest: '../../share/www/dashboard.assets/', cwd: 'dist/release/dashboard.assets/',  expand: true},\n        ]\n      },\n      couchdebug: {\n        files: [\n          // this gets built in the template task\n          {src: \"dist/debug/index.html\", dest: \"../../share/www/index.html\"},\n        ]\n      },\n      dist:{\n        files:[\n          {src: 'dist/debug/index.html', dest: 'dist/release/index.html'},\n          {src: './favicon.ico', dest: \"dist/release/favicon.ico\"}\n        ]\n      },\n\n      distDepsRequire: {\n        files:[\n          {src: 'assets/**', dest: 'dist/tmp-out/', flatten: false, expand: false},\n        ]\n      },\n\n      debug: {\n        files:[\n          {src: './favicon.ico', dest: \"dist/debug/favicon.ico\"}\n        ]\n      },\n\n      testfiles: {\n        files:[\n          {src: ['test/**'], dest: 'dist/debug/', flatten: false, expand: true},\n          {src: 'assets/**', dest: 'dist/debug/', flatten: false, expand: false},\n        ]\n      }\n    },\n\n    get_deps: {\n      \"default\": {\n        src: \"settings.json\"\n      }\n    },\n\n    gen_load_addons: {\n      \"default\": {\n        src: \"settings.json\"\n      }\n    },\n    gen_initialize: templateSettings,\n    checkTestExists: templateSettings,\n\n    mkcouchdb: couch_config,\n    rmcouchdb: couch_config,\n    couchapp: couch_config,\n\n    mochaSetup: {\n      default: {\n        files: {\n          src: initHelper.getFileList(['[Ss]pec.js'], [\n            './app/core/**/*[Ss]pec.js',\n            './app/addons/**/*[Ss]pec.js',\n            './app/addons/**/*[Ss]pec.react.jsx',\n            './app/addons/**/*[Ss]pec.jsx'\n          ])\n        },\n        template: 'test/test.config.underscore'\n      }\n    },\n\n    shell: {\n      webpack: {\n        command: 'npm run webpack:dev'\n      },\n\n      webpackrelease: {\n        command: 'npm run webpack:release'\n      },\n\n      webpacktest: {\n        command: 'npm run webpack:test'\n      },\n\n      phantomjs: {\n        command: 'npm run phantomjs'\n      }\n    },\n\n    exec: {\n      start_nightWatch: {\n        command: __dirname + '/node_modules/nightwatch/bin/nightwatch' +\n        ' -c ' + __dirname + '/test/nightwatch_tests/nightwatch.json'\n      }\n    },\n\n    // generates the nightwatch.json file with appropriate content for this env\n    initNightwatch: {\n      default: {\n        settings: initHelper.readSettingsFile(),\n        template: 'test/nightwatch_tests/nightwatch.json.underscore',\n        dest: 'test/nightwatch_tests/nightwatch.json'\n      }\n    }\n  };\n\n  grunt.initConfig(config);\n\n  /*\n   * Load Grunt plugins\n   */\n  // Load fauxton specific tasks\n  grunt.loadTasks('tasks');\n\n  grunt.loadNpmTasks('grunt-couchapp');\n  grunt.loadNpmTasks('grunt-exec');\n  grunt.loadNpmTasks('grunt-contrib-copy');\n  grunt.loadNpmTasks('grunt-contrib-clean');\n  grunt.loadNpmTasks('grunt-shell');\n  /*\n   * Default task\n   */\n  // defult task - install minified app to local CouchDB\n  grunt.registerTask('default', 'couchdb');\n\n  /*\n   * Transformation tasks\n   */\n  grunt.registerTask('test', ['checkTestExists', 'clean:release', 'dependencies', 'copy:debug', 'gen_initialize:development', 'test_inline']);\n\n  // lighter weight test task for use inside dev/watch\n  grunt.registerTask('test_inline', ['mochaSetup', 'shell:webpacktest', 'shell:phantomjs']);\n  // Fetch dependencies (from git or local dir)\n  grunt.registerTask('dependencies', ['get_deps', 'gen_load_addons:default']);\n\n  // minify code and css, ready for release.\n  grunt.registerTask('build', ['copy:distDepsRequire', 'shell:webpackrelease']);\n  /*\n   * Build the app in either dev, debug, or release mode\n   */\n  // dev server\n  grunt.registerTask('dev', function () {\n    console.log('This is deprecated. Please run npm run dev instead');\n  });\n\n  // build a debug release\n  grunt.registerTask('debug', ['clean', 'dependencies', \"gen_initialize:development\",\n    'copy:debug']);\n\n  grunt.registerTask('debugDev', ['clean', 'dependencies', \"gen_initialize:development\",\n    'copy:debug', 'shell:webpack']);\n\n  grunt.registerTask('devSetup', ['dependencies', \"gen_initialize:development\",\n    'copy:debug']);\n  grunt.registerTask('devSetupWithClean', ['clean', 'devSetup']);\n\n  grunt.registerTask('watchRun', ['clean:watch', 'dependencies', 'shell:stylecheck']);\n\n  // build a release\n  grunt.registerTask('release_commons_prefix', ['clean', 'dependencies']);\n  grunt.registerTask('release_commons_suffix', ['build', 'copy:dist']);\n\n  grunt.registerTask('release', ['release_commons_prefix', 'gen_initialize:release', 'release_commons_suffix']);\n  grunt.registerTask('couchapp_release', ['release_commons_prefix', 'gen_initialize:couchapp', 'release_commons_suffix']);\n\n  /*\n   * Install into CouchDB in either debug, release, or couchapp mode\n   */\n  // make a development install that is server by mochiweb under _utils\n  grunt.registerTask('couchdebug', ['debug', 'copy:couchdebug']);\n  // make a minimized install that is server by mochiweb under _utils\n  grunt.registerTask('couchdb', ['release', 'copy:couchdb']);\n  // make an install that can be deployed as a couchapp\n  grunt.registerTask('couchapp_setup', ['couchapp_release']);\n  // install fauxton as couchapp\n  grunt.registerTask('couchapp_install', ['rmcouchdb:fauxton', 'mkcouchdb:fauxton', 'couchapp:fauxton']);\n  // setup and install fauxton as couchapp\n  grunt.registerTask('couchapp_deploy', ['couchapp_setup', 'couchapp_install']);\n\n  /*\n   * Nightwatch functional testing\n   */\n  //Start Nightwatch test from terminal, using: $ grunt nightwatch\n  grunt.registerTask('nightwatch', ['initNightwatch', 'exec:start_nightWatch']);\n};\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/jest-setup.js":"// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\nrequire('jest');\nrequire('whatwg-fetch');\n\nwindow.$ = window.jQuery = require('jquery');\nwindow._ = require('lodash');\nwindow.Backbone = require('backbone');\n\nObject.defineProperty(window.location, 'origin', {\n  writable: true,\n  value: 'http://dev:8000'\n});\n\n\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/version-check.js":"var semver = require('semver');\n\nvar version = process.version.replace(/^v/, '');\n\nif (!semver.satisfies(version, '>=4')) {\n  console.error('Error:');\n  console.error('Fauxton needs Node 4 or greater to work');\n  process.exit(1);\n}\n","/home/travis/build/npmtest/node-npmtest-fauxton/node_modules/fauxton/webpack.config.release.js":"// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\nvar webpack = require('webpack');\nvar ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar path = require('path');\nconst settings = require('./tasks/helper')\n                    .init()\n                    .readSettingsFile()\n                    .template\n                    .release;\n\nmodule.exports = {\n  // Entry point for static analyzer:\n  entry: {\n    bundle: './app/main.js'\n  },\n\n  output: {\n    path: path.join(__dirname, '/dist/release/'),\n    filename: 'dashboard.assets/js/[name].[chunkhash].js'\n  },\n\n  plugins: [\n    new webpack.optimize.LimitChunkCountPlugin({maxChunks: 1}),\n    new webpack.DefinePlugin({\n      'process.env': {\n        'NODE_ENV': JSON.stringify('production') // This has effect on the react lib size\n      }\n    }),\n    // moment doesn't offer a modular API, so manually remove locale\n    // see https://github.com/moment/moment/issues/2373\n    new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/),\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false\n      },\n      sourceMap: true\n    }),\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor', // Specify the common bundle's name.\n      minChunks: function (module) {\n        // this assumes your vendor imports exist in the node_modules directory\n        return module.context && module.context.indexOf('node_modules') !== -1;\n      }\n    }),\n    new webpack.optimize.CommonsChunkPlugin({\n      name: \"manifest\",\n      minChunks: Infinity\n    }),\n    new HtmlWebpackPlugin(Object.assign({\n      template: settings.src,\n      title: 'Project Fauxton',\n      filename: 'index.html',\n      generationLabel: 'Fauxton Release',\n      generationDate: new Date().toISOString()\n    }, settings.variables)),\n    new ExtractTextPlugin(\"dashboard.assets/css/styles.[chunkhash].css\"),\n  ],\n\n  resolve: {\n    // Allow to omit extensions when requiring these files\n    extensions: ['', '.js', '.jsx']\n  },\n\n  module: {\n    loaders: [\n    {\n      test: /\\.jsx?$/,\n      enforce: \"pre\",\n      use: ['eslint-loader'],\n      exclude: /node_modules/\n    },\n    {\n      test: /\\.jsx?$/,\n      exclude: /node_modules/,\n      use: 'babel-loader'\n    },\n    {\n      test: require.resolve('jquery'),\n      use: [{\n          loader: 'expose-loader',\n          options: 'jQuery'\n      },\n      {\n          loader: 'expose-loader',\n          options: '$'\n      }]\n     },\n     {\n      test: require.resolve(\"backbone\"),\n      use: [{\n          loader: 'expose-loader',\n          options: 'Backbone'\n      }]\n    },\n    {\n      test: /\\.less/,\n      use: ExtractTextPlugin.extract({\n        fallback: \"style-loader\",\n        use: [\n          \"css-loader\",\n          \"less-loader\"\n        ],\n        publicPath: '../../'\n      }),\n    },\n    {\n      test: /\\.css$/, use: [\n        'style-loader',\n        'css-loader'\n        ]\n    },\n    {\n      test: /\\.woff(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n      loader: 'url-loader?limit=10000&mimetype=application/font-woff&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    {\n      test: /\\.woff2(\\?\\S*)?$/,   loader: 'url-loader?limit=10000&mimetype=application/font-woff2&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    {\n      test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'url-loader?limit=10000&mimetype=application/font-tff&name=dashboard.assets/fonts/[name].[ext]'\n    },\n    { test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/fonts/[name].[ext]' },\n    { test: /\\.png(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/img/[name].[ext]' },\n    { test: /\\.gif(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'file-loader?name=dashboard.assets/img/[name].[ext]' },\n    { test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/,    loader: 'url-loader?limit=10000&mimetype=image/svg+xml&name=dashboard.assets/img/[name].[ext]' }\n    ]\n  },\n  resolve: {\n    extensions: ['*', '.js', '.jsx'],\n    alias: {\n      \"underscore\": \"lodash\",\n      \"bootstrap\": \"../assets/js/libs/bootstrap\",\n    }\n  }\n};\n"}